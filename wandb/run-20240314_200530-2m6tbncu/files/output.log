
Loading model e2vid/pretrained/E2VID_lightweight.pth.tar...
Traceback (most recent call last):
  File "/root/wj/stess/train.py", line 58, in <module>
    main()
  File "/root/wj/stess/train.py", line 39, in main
    trainer = ESSModel(settings)
  File "/root/wj/stess/training/ess_trainer.py", line 23, in __init__
    super(ESSModel, self).__init__(settings)
  File "/root/wj/stess/training/base_trainer.py", line 28, in __init__
    self.init_fn()
  File "/root/wj/stess/training/ess_trainer.py", line 27, in init_fn
    self.buildModels()
  File "/root/wj/stess/training/ess_trainer.py", line 51, in buildModels
    self.front_end_sensor_b, self.e2vid_decoder = load_model(self.settings.path_to_model)
  File "/root/wj/stess/e2vid/utils/loading_utils.py", line 7, in load_model
    raw_model = torch.load(path_to_model)
  File "/root/miniconda3/envs/ess/lib/python3.10/site-packages/torch/serialization.py", line 713, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "/root/miniconda3/envs/ess/lib/python3.10/site-packages/torch/serialization.py", line 930, in _legacy_load
    result = unpickler.load()
  File "/root/miniconda3/envs/ess/lib/python3.10/site-packages/torch/serialization.py", line 876, in persistent_load
    wrap_storage=restore_location(obj, location),
  File "/root/miniconda3/envs/ess/lib/python3.10/site-packages/torch/serialization.py", line 175, in default_restore_location
    result = fn(storage, location)
  File "/root/miniconda3/envs/ess/lib/python3.10/site-packages/torch/serialization.py", line 152, in _cuda_deserialize
    device = validate_cuda_device(location)
  File "/root/miniconda3/envs/ess/lib/python3.10/site-packages/torch/serialization.py", line 136, in validate_cuda_device
    raise RuntimeError('Attempting to deserialize object on a CUDA '
RuntimeError: Attempting to deserialize object on a CUDA device but torch.cuda.is_available() is False. If you are running on a CPU-only machine, please use torch.load with map_location=torch.device('cpu') to map your storages to the CPU.